{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MyDocs This is an all in one documentation project that consists of quick starts and how to guidelines about ICT.","title":"Welcome to MyDocs"},{"location":"#welcome-to-mydocs","text":"This is an all in one documentation project that consists of quick starts and how to guidelines about ICT.","title":"Welcome to MyDocs"},{"location":"documentation/mkdocs/","text":"MkDocs MkDocs is a python project to quickly build a documentation website using markdown file. Deploying mkdocs Deploy to Github Pages using Github actions To deploy MkDocs project to Github Pages we can follow the steps below: create a workflow.yml file inside .github/workflows/ directory bash script touch .github/workflows/workflow.yml define the workflow base on the template below workflow.yml name : workflow on : push : branches : - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs - run : mkdocs gh-deploy --force Troubleshoot Github actions permission denied There are 2 known solutions to solve this issue: Set actions permission in the repository settings to read and write Create a personal access token which will be stored as repository or environment secrets then pass it to actions/checkout@v3 workflow.yml name : workflow on : push : branches : - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v3 with : token : ${{ secrets.PAT }} - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs - run : mkdocs gh-deploy --force","title":"MkDocs"},{"location":"documentation/mkdocs/#mkdocs","text":"MkDocs is a python project to quickly build a documentation website using markdown file.","title":"MkDocs"},{"location":"documentation/mkdocs/#deploying-mkdocs","text":"","title":"Deploying mkdocs"},{"location":"documentation/mkdocs/#deploy-to-github-pages-using-github-actions","text":"To deploy MkDocs project to Github Pages we can follow the steps below: create a workflow.yml file inside .github/workflows/ directory bash script touch .github/workflows/workflow.yml define the workflow base on the template below workflow.yml name : workflow on : push : branches : - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v2 - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs - run : mkdocs gh-deploy --force","title":"Deploy to Github Pages using Github actions"},{"location":"documentation/mkdocs/#troubleshoot","text":"","title":"Troubleshoot"},{"location":"documentation/mkdocs/#github-actions-permission-denied","text":"There are 2 known solutions to solve this issue: Set actions permission in the repository settings to read and write Create a personal access token which will be stored as repository or environment secrets then pass it to actions/checkout@v3 workflow.yml name : workflow on : push : branches : - main jobs : deploy : runs-on : ubuntu-latest steps : - uses : actions/checkout@v3 with : token : ${{ secrets.PAT }} - uses : actions/setup-python@v2 with : python-version : 3.x - run : pip install mkdocs - run : mkdocs gh-deploy --force","title":"Github actions permission denied"},{"location":"hosting/email/","text":"Email Hosting To use email in our project, we need an email server wether we manage the server ourself or use third party solution. Serverless email hosting Serverless email hosting is a simple solution if we do not want to bother managing the email server. Here are some solutions we can use: formspree.io 99inbound basin elformo enformed","title":"Email Hosting"},{"location":"hosting/email/#email-hosting","text":"To use email in our project, we need an email server wether we manage the server ourself or use third party solution.","title":"Email Hosting"},{"location":"hosting/email/#serverless-email-hosting","text":"Serverless email hosting is a simple solution if we do not want to bother managing the email server. Here are some solutions we can use: formspree.io 99inbound basin elformo enformed","title":"Serverless email hosting"},{"location":"linux/commands/file-management/","text":"File Management This document consists of frequently used commands to work with files in Linux File size Calculate file(s) size with du -b : show file size instead of disk usage -c : show total file(s) size at the end -h : show human readable format # Calculate each directory's size inside current working directory du -bch # Calculate multiple files size du -bch [ filename/pattern ]","title":"File Management"},{"location":"linux/commands/file-management/#file-management","text":"This document consists of frequently used commands to work with files in Linux","title":"File Management"},{"location":"linux/commands/file-management/#file-size","text":"","title":"File size"},{"location":"linux/commands/file-management/#calculate-files-size-with-du","text":"-b : show file size instead of disk usage -c : show total file(s) size at the end -h : show human readable format # Calculate each directory's size inside current working directory du -bch # Calculate multiple files size du -bch [ filename/pattern ]","title":"Calculate file(s) size with du"},{"location":"node-js/get-started/","text":"Get Started Installation NVM NVM (Node Version Manager) is a version manager for node.js. NVM on windows NVM-Windows is a project to manage multiple installations of node.js on a Windows computer. Chocolatey NVM-Windows can be installed using Chocolatey Package Manager by running command below: choco install nvm Once the NVM has been successfully installed, run this command to install the latest lts version of node.js: nvm install lts Manual Install","title":"Get Started"},{"location":"node-js/get-started/#get-started","text":"","title":"Get Started"},{"location":"node-js/get-started/#installation","text":"","title":"Installation"},{"location":"node-js/get-started/#nvm","text":"NVM (Node Version Manager) is a version manager for node.js.","title":"NVM"},{"location":"node-js/get-started/#nvm-on-windows","text":"NVM-Windows is a project to manage multiple installations of node.js on a Windows computer.","title":"NVM on windows"},{"location":"node-js/get-started/#chocolatey","text":"NVM-Windows can be installed using Chocolatey Package Manager by running command below: choco install nvm Once the NVM has been successfully installed, run this command to install the latest lts version of node.js: nvm install lts","title":"Chocolatey"},{"location":"node-js/get-started/#manual-install","text":"","title":"Manual Install"},{"location":"windows/git-bash/","text":"Git Bash Custom git bash profile To customize our bash terminal, we can create a file named .bashrc. This file will be run everytime the bash start. We can for example add alias for a command, path or any command in bash. Create .bashrc file inside user home directory # powershell command ni ~\\. bashrc Add the custom bash command to the file Add git bash profile to windows terminal Go to settings Click add a new profile Add git bash path C:\\Program Files\\Git\\bin\\bash.exe Add the icon path C:\\Program Files\\Git\\mingw64\\share\\git\\git-for-windows.ico","title":"Git Bash"},{"location":"windows/git-bash/#git-bash","text":"","title":"Git Bash"},{"location":"windows/git-bash/#custom-git-bash-profile","text":"To customize our bash terminal, we can create a file named .bashrc. This file will be run everytime the bash start. We can for example add alias for a command, path or any command in bash. Create .bashrc file inside user home directory # powershell command ni ~\\. bashrc Add the custom bash command to the file","title":"Custom git bash profile"},{"location":"windows/git-bash/#add-git-bash-profile-to-windows-terminal","text":"Go to settings Click add a new profile Add git bash path C:\\Program Files\\Git\\bin\\bash.exe Add the icon path C:\\Program Files\\Git\\mingw64\\share\\git\\git-for-windows.ico","title":"Add git bash profile to windows terminal"}]}